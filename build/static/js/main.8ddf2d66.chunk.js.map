{"version":3,"sources":["components/layout/header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","filter","post","data","get","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8ddf2d66.chunk.js","sourcesContent":["import React from 'react';\n// When using routers in React you cannot use <a> tags for links within a router\n// You must use Link for links in a router\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>TodoList</h1>\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n}\n\nconst linkStyle = {\n    color: '#fff',\n    textDecoration: 'none'\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ?\n            'line-through' : 'none'\n        }\n    }\n    \n    render() {\n        // Pull out id and title from props for ease of reference\n        // Ex. id = this.props.todo.id\n        const { id, title } = this.props.todo\n        return (\n//            <div style={{ backgroundColor: '#f4f4f4' }}>\n            // On change run method markComplete associated with the prop\n            // passed to this component. ie this.props.markComplete drills up\n            // to from whence the props come; in this case App where the state is defined\n            <div style={this.getStyle()}>\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        onChange={this.props.markComplete.bind(this, id)}\n                    />\n                    {' '}\n                    { title }\n                    <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>X</button>\n                </p>\n            </div>\n        )\n    }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 8px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n\nexport default TodoItem","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n    render () {\n        return this.props.todos.map((todo) => (\n//            <h3>{ todo.title }</h3>\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete}\n                delTodo={this.props.delTodo}/>\n        ));\n    }\n}\n\n// PropTypes\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\nexport default Todos;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n    // Define input text fields in the state variable\n    state = {\n        title: ''\n    }\n\n    // onChange handler to set state title to whatever value user types in\n    // changing input with name=\"title\" will change state.title\n    onChange = (e) => { this.setState({ [e.target.name]: e.target.value }) }\n\n    onSubmit = (e) => {\n        e.preventDefault();  // ??? prevents form from submitting to file?\n        this.props.addTodo(this.state.title);  // Pass the title up to App\n        this.setState({ title: '' });  // Reset title for the input after submitting\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        style={{ flex: '10', padding: '5px' }}\n                        placeholder=\"Add Todo ...\"\n                        value={this.state.title}\n                        onChange={this.onChange}\n                    />\n                    <input\n                        type=\"submit\"\n                        value=\"Submit\"\n                        className=\"btn\"\n                        style={{ flex: '1' }}\n                    />\n                </form>\n            </div>\n        )\n    }\n}\n\n// PropTypes\nAddTodo.propTypes = {\n    addTodo: PropTypes.func.isRequired\n}\n\nexport default AddTodo\n","import React from 'react'\n\nfunction About() {\n    return (\n        // React requires returned content to be wrapped in an element like <div>\n        // If you don't want a wrapping element you can use <React.Fragment> to\n        // satisfy React's requirement\n        <React.Fragment>\n            <h1>About</h1>\n            <p>This is the TodoList app v1.0.0.  It is part of\n                a React crash course.</p>\n        </React.Fragment>\n    )\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n// Broken: import uuid from 'uuid';\n// import {v4 as uuidv4} from 'uuid';  // Only used for early devel prior to using backend\nimport axios from 'axios';  // Extension for sending requests to backend\n\nimport './App.css';\n\n// ***********************************************\n// Tutorial:\n// https://www.youtube.com/watch?v=sBws8MSXN7A\n// ***********************************************\n\n// RS: This version of React uses \"function App()\" instead of class\n//     Switch to class since tutorial uses class\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  // Send request to the backend to load data once page mounts\n  componentDidMount() {\n    // Get only 10 items \".../todos\" gets all items\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({ todos: res.data }))  // Save response to todos state\n  //    .then(res => console.log(res.data))  // for debugging\n  }\n\n\n  // Toggle the state of a TodoItem\n  markComplete = (id) => {\n  //    console.log(id)\n    this.setState({ todos: this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed  // Toggle state\n      }\n      return todo;\n    }) });\n  }\n\n  delTodo =(id) => {\n    // Delete TodoItem with a given target id in the backend\n    axios.delete('https://jsonplaceholder.typicode.com/todos/$(id)')\n      .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n    // In todos state var, remember only the items where id !== to target id.\n    // This effectively filters out the item with our target id\n    // Need the spread operator ... to do this\n  }\n\n  addTodo = (title) => {\n    // post response to backend\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title: title,\n      completed: false\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n    // Copy todos and add new todo item response from backend\n  }\n\n  render () {\n    // Log the todos array to the browser's web consol for debugging\n    // Don't leave this active during runtime; only for debugging\n    // console.log(this.state.todos)\n    // Pass the todos state to the Todos component as a prop[erty]\n    // To use a browser router we have to wrap everything in that router\n    // The Route tag maps all desired page components to specified path:\n    // in this case \"/\"\n    // \"exact path\" prevents these components from being display for every path below \"/\"\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete}\n                  delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// Local copy of todos for early development\n// Later we can use todos from https://jsonplaceholder.typicode.com/todos\n// which is a free to use backend\n//    todos: [\n//      {\n//        id: uuidv4(),\n//        title: 'Take out the trash',\n//        completed: false\n//      },\n//      {\n//        id: uuidv4(),\n//        title: 'Dinner with wife',\n//        completed: false\n//      },\n//      {\n//        id: uuidv4(),\n//        title: 'Meeting with boss',\n//        completed: false\n//      }\n//    ]\n//  }\n\n// Early development version where we save to our own todos state variable\n//  // Delete TodoItem with a given target id\n//  delTodo =(id) => {\n////    console.log(id)\n//    // Remember only the items where id !== to target id.\n//    // This effectively filters out the item with our target id\n//    // Need the spread operator ... to do this\n//    this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]})\n//  }\n\n// Early development version where we save to our own todos state variable\n//  addTodo = (title) => {\n////    console.log(title)\n//    const newTodo = {\n//      id: uuidv4(),\n//      title: title,\n//      completed: false\n//    }\n//    this.setState({ todos: [...this.state.todos, newTodo] })  // Copy todos and add new todo item\n//  }   ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';  // RS: This is the parent app componet that wraps around everything\n\n// RS: Below line renders parent app to the <div> tag w/ id = \"root\" in public/index.html\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}